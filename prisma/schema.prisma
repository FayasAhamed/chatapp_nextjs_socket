// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  name String?
  createdRooms ChatRoom[] @relation("ChatRoomOwner")
  includedRooms ChatRoom[] @relation("ChatRoomUsers")
  messages Message[] @relation("UserMessages")
}

model ChatRoom {
  id String @id @default(cuid())
  name String @unique
  ownerId String
  owner User @relation("ChatRoomOwner", fields: [ownerId], references: [id])
  users User[] @relation("ChatRoomUsers")
  messages Message[] @relation("ChatMessages")
}

model Message {
  id String @id @default(cuid())
  content String?
  messageType MessageType @default(TEXT)
  sender User @relation("UserMessages", fields: [senderId], references: [id])
  senderId String
  chat ChatRoom @relation("ChatMessages", fields: [chatId], references: [id])
  chatId String
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  deleted Boolean @default(false)
  replyTo Message? @relation("Replies", fields: [replyToId], references: [id])
  replyToId String?
  replies Message[] @relation("Replies")
  attachments Attachment[]
}

model Attachment {
  id String @id @default(cuid())
  message Message @relation(fields: [messageId], references: [id])
  messageId String
  fileUrl String
  fileType String
  uploadedAt DateTime @default(now())
}

enum MessageType {
  TEXT
  IMAGE
  FILE
  VIDEO
  AUDIO
  STICKER
}
